<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <PublishTrimmed>true</PublishTrimmed>
    <PublishReadyToRun>false</PublishReadyToRun>
    <PublishSingleFile>false</PublishSingleFile>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <LangVersion>latest</LangVersion>
    <AssemblyName>IdentityServer.Host.Ng</AssemblyName>
    <Description>Mbrane identity server Angular host</Description>
    <Authors>Mbrane</Authors>
    <Company>Mbrane</Company>
    <Copyright>Copyright © 2020 Mbrane. All rights reserved.</Copyright>
    <AssemblyVersion>1.0.1</AssemblyVersion>
    <FileVersion>1.0.1.1</FileVersion>
    <NoWarn>1591</NoWarn>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
  </PropertyGroup>

  <PropertyGroup>
    <SpaRoot>ClientApp/</SpaRoot>
    <Ng>node_modules/.bin/ng</Ng>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>6217d1e6-111b-4d05-a1cd-b681493071c0</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Shared\GlobalSuppressions.cs" Link="GlobalSuppressions.cs" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="appsettings.Development.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="token_signing.pfx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="token_validation.pfx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="NWebsec.AspNetCore.Middleware" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\IdentityServer\IdentityServer.csproj" />
  </ItemGroup>

  <Target Name="EnsureNodeEnv" BeforeTargets="Build" Condition="!Exists('$(SpaRoot)$(Ng)')">
    <Message Text="------ Started installation of npm packages ------" Importance="high" />
    <Message Text="node --version..." Importance="high" />
    <Exec Command="node --version" ContinueOnError="true" WorkingDirectory="$(SpaRoot)">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Message Text="npm --version..." Importance="high" />
    <Exec Command="npm --version" ConsoleToMSBuild="true" EchoOff="false" />
    <Message Text="npm install..." Importance="high" />
    <Exec Command="npm install" WorkingDirectory="$(SpaRoot)" ConsoleToMSBuild="true" EchoOff="false" />
    <Message Text="ng --version..." Importance="high" />
    <Exec Command="$(Ng) --version" WorkingDirectory="$(SpaRoot)" />
    <Message Text="------ Finished installation of npm packages ------" Importance="high" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Message Text="------ Started installation of npm packages ------" Importance="high" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" ConsoleToMSBuild="true" EchoOff="false" />
    <Message Text="------ Finished installation of npm packages ------" Importance="high" />
    <Message Text="------ Started $(Ng) build --prod --build-optimizer... ------" Importance="high" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="$(Ng) build --prod --build-optimizer" ConsoleToMSBuild="true" EchoOff="false" />
    <Message Text="------ Finished $(Ng) build --prod --build-optimizer... ------" Importance="high" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
